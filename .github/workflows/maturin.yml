# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github
#

# There are some manual modifications in this file
name: Python

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            openssl_install: yum install -y openssl-devel
          # These are disabled. x86 build fails when building openblas, and
          # the other targets needs cross-compilation of openblas.
          # - runner: ubuntu-latest
          #   target: x86
          #   openssl_install: yum install -y openssl-devel
          # - runner: ubuntu-latest
          #   target: aarch64
          #   openssl_install: apt-get update && apt-get install -y libssl-dev pkg-config
          # - runner: ubuntu-latest
          #   target: armv7
          #   openssl_install: apt-get update && apt-get install -y libssl-dev pkg-config
          # - runner: ubuntu-latest
          #   target: s390x
          #   openssl_install: apt-get update && apt-get install -y libssl-dev pkg-config
          # - runner: ubuntu-latest
          #   target: ppc64le
          #   openssl_install: apt-get update && apt-get install -y libssl-dev pkg-config
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
          before-script-linux: ${{ matrix.platform.openssl_install }}
      - name: Install built wheel
        run: |
          pip install pm-remez --no-index --find-links dist --force-reinstall
          python -c "import pm_remez"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
          
  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          # windows x86 gives a bunch of errors when linking liblax
          # so it is disabled
          # - runner: windows-latest
          #   target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          # use intel-mkl-static when building on windows
          args: --release --out dist --features intel-mkl-static,num-bigfloat,python
          sccache: 'true'
      - name: Install built wheel
        run: |
          pip install pm-remez --no-index --find-links dist --force-reinstall
          python -c "import pm_remez"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Install built wheel
        run: |
          pip install pm-remez --no-index --find-links dist --force-reinstall
          python -c "import pm_remez"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
